<project>
  <property name="src" value="./src" />
  <property name="alien.src" value="./alien/src" />
  <property name="alien.libs" value="./alien/libs" />
  <property name="plugin.src" value="./plugin/src" />
  <property name="classes" value="./build/classes" />
  <property name="jars" value="./build/jar" />

  <target name="clean">
    <delete dir="${jars}"/>
    <delete dir="${classes}"/>
  </target>

  <!--Build external dependencies from source, but keep them separate. -->
  <target name="compile.alien.src">
    <mkdir dir="${classes}"/>
    <javac srcdir="${alien.src}" destdir="${classes}" debug="true">
    <compilerarg line="-encoding utf8"/>
    </javac>
  </target>

  <target name="check.for.freenet.jar">
    <mkdir dir="${alien.libs}"/>
    <fail message="No freenet.jar! Copy freenet.jar into: ${alien.libs}">
      <condition>
        <not>
          <resourcecount count="1">
            <fileset id="fs" dir="${alien.libs}" includes="freenet.jar"/>
          </resourcecount>
        </not>
      </condition>
    </fail>
  </target>

  <target name="compile" depends="check.for.freenet.jar, compile.alien.src">
    <mkdir dir="${classes}"/>
    <javac srcdir="${src}" destdir="${classes}" debug="true">
        <compilerarg line="-encoding utf8"/>
        <classpath>
        <pathelement location="${alien.libs}/freenet.jar"/>
        </classpath>
    </javac>
  </target>

  <target name="compile.plugin.src" depends="check.for.freenet.jar, compile">
    <mkdir dir="${classes}"/>
    <javac srcdir="${plugin.src}" destdir="${classes}" debug="true">
      <compilerarg line="-encoding utf8"/>
      <classpath>
        <pathelement location="${alien.libs}/freenet.jar"/>
      </classpath>
    </javac>
  </target>

  <target name="jar" depends="compile">
    <mkdir dir="${jars}"/>
    <jar destfile="${jars}/jfniki.jar" basedir="${classes}">
      <manifest>
        <attribute name="Main-Class" value="fniki.standalone.ServeHttp"/>
      </manifest>
    </jar>
  </target>

  <!-- jfniki-plugin.jar contains all the standalone code too. -->
  <target name="plugin" depends="compile.plugin.src">
    <mkdir dir="${jars}"/>
    <jar destfile="${jars}/jfniki-plugin.jar" basedir="${classes}">
      <manifest>
        <attribute name="Main-Class" value="fniki.standalone.ServeHttp"/>
        <attribute name="Plugin-Main-Class" value="fniki.plugin.Fniki"/>
      </manifest>
    </jar>
  </target>

  <target name="run" depends="jar">
    <java jar="${jars}/jfniki.jar" fork="true"/>
  </target>

</project>
